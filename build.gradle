plugins {
  id 'maven-publish'
  id 'signing'
  id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jsoup:jsoup:1.6.3'
    testImplementation 'commons-io:commons-io:2.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.inetsoftware'
            artifactId = 'sass-compiler'
            version = '1.3-1c'
            from components.java
            pom {
                name = 'Java Sass Compiler'
                description = 'A Sass compiler written completely in Java (pure Java).'
                url = 'https://github.com/i-net-software/sass-compiler'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Horcrux7'
                        name = 'Volker Berlin'
                        email = 'vberlin@inetsoftware.de'
                        organization = 'i-net software'
                        organizationUrl = 'https://www.inetsoftware.de'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:i-net-software/sass-compiler.git'
                    developerConnection = 'scm:git:git@github.com:i-net-software/sass-compiler.git'
                    url = 'https://github.com/i-net-software/sass-compiler'
                }
            }
        }
    }

    repositories {
        maven {
            name = 'sonatype'
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername")
                password = project.findProperty("ossrhPassword")
            }
        }
    }
}

signing {
    required { project.hasProperty("signing.keyId") }
    sign publishing.publications.maven
}
